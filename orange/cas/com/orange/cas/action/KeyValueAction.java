package com.orange.cas.action;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.servlet.mvc.support.RedirectAttributes;import com.orange.cas.entity.KeyValueEntity;import com.orange.cas.service.KeyValueService;import com.orange.core.base.dao.page.PagerModel;import com.orange.oscache.ManageCache;import com.orange.web.action.base.BaseAction;import com.orange.web.action.common.statics.Commons;import javax.servlet.http.HttpServletRequest;/** * 键值对管理 */@Controller@RequestMapping("/cas/kv")public class KeyValueAction extends BaseAction<KeyValueEntity> {	@Autowired	private KeyValueService casKeyValueService;    @Autowired	private ManageCache cache;        private static final String page_toList = Commons.SCOPE_MANAGE + "/cas/kv/kvList";    private static final String page_toAdd = Commons.SCOPE_MANAGE + "/cas/kv/kvEdit";    private static final String page_toEdit = Commons.SCOPE_MANAGE + "/cas/kv/kvEdit";    KeyValueAction(){        super.page_toList = page_toList;// not support        super.page_toAdd = page_toAdd;// not support        super.page_toEdit = page_toEdit;    }    	@Override	public KeyValueService getService() {		return casKeyValueService;	}    public ManageCache getCache() {		return cache;	}	public void setCache(ManageCache cache) {		this.cache = cache;	}    @Override	protected void selectListAfter(PagerModel pager) {		pager.setPagerUrl("selectList");	}    @Override	public void insertAfter(KeyValueEntity e) {		e.clear();	}	@Override    @RequestMapping(value = "insert", method = RequestMethod.POST)	public String insert(HttpServletRequest request, KeyValueEntity e, RedirectAttributes flushAttrs) throws Exception {		super.insert(request, e, flushAttrs);//		cache.loadKeyValue();		return "redirect:selectList";	}	@Override    @RequestMapping(value = "update", method = RequestMethod.POST)	public String update(HttpServletRequest request, KeyValueEntity e, RedirectAttributes flushAttrs) throws Exception {		super.update(request, e, flushAttrs);//		cache.loadKeyValue();		return "redirect:selectList";	}	}