package com.orange.cas.action;import javax.servlet.http.HttpServletRequest;import com.orange.cas.entity.MemberEntity;import com.orange.cas.service.MemberService;import com.orange.core.base.service.Services;import com.orange.core.util.MD5;import com.orange.web.action.base.BaseAction;import com.orange.web.action.common.statics.Commons;import com.orange.web.action.holder.RequestHolder;import org.apache.commons.lang.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.servlet.mvc.support.RedirectAttributes;@Controller@RequestMapping("/cas/member/")public class MemberAction extends BaseAction<MemberEntity> {	@SuppressWarnings("unused")	private static final Logger logger = LoggerFactory			.getLogger(MemberAction.class);	@SuppressWarnings("unused")	private static final long serialVersionUID = 1L;	@Autowired	private MemberService casMemberService;	private static final String page_toList = Commons.SCOPE_MANAGE + "/cas/member/list";	private static final String page_toAdd = Commons.SCOPE_MANAGE + "/cas/member/edit";	private static final String page_toEdit = Commons.SCOPE_MANAGE + "/cas/member/edit";	private static final String page_show = Commons.SCOPE_MANAGE + "/cas/member/show";		public MemberAction() {		super.page_toList = page_toList;		super.page_toAdd = page_toAdd;		super.page_toEdit = page_toEdit;	}	@Override	public Services<MemberEntity> getService() {		return casMemberService;	}	@RequestMapping("toAdd")	public String toAdd(@ModelAttribute("e") MemberEntity user, ModelMap model)			throws Exception {		return page_toAdd;	}	@Override	@RequestMapping("toEdit")	public String toEdit(MemberEntity e, ModelMap model) throws Exception {		e = casMemberService.selectOne(e);		model.addAttribute("e", e);		return page_toEdit;	}	/**	 * 根据会员账号查询会员信息	 * 	 * @return	 * @throws Exception	 */	@RequestMapping("show")	public String show(MemberEntity e, ModelMap model) throws Exception {		String id = e.getId();		if (StringUtils.isBlank(id)) {			throw new NullPointerException("账号不能为空！");		}		e.clear();		e.setId(id);		e = casMemberService.selectOne(e);		if (e == null) {			throw new NullPointerException("系统查询不到用户信息！");		}		model.addAttribute("e", e);		return page_show;	}	/**	 * 重置会员密码，	 * 	 * 发送重置好的密码到会员邮箱???	 * 	 * @return	 * @throws Exception	 */	@RequestMapping(value = "resetPwd", method = RequestMethod.POST)	public String resetPwd(@RequestParam(required = false) String id)			throws Exception {		MemberEntity acc = new MemberEntity();		acc.setId(id);		acc.setPassword(MD5.md5("111111"));		casMemberService.update(acc);		return selectList(RequestHolder.getRequest(), acc);	}	/**	 * 添加用户	 */	@Override	@RequestMapping("insert")	public String insert(HttpServletRequest request,			@ModelAttribute("e") MemberEntity e, RedirectAttributes flushAttrs)			throws Exception {		return save(e, flushAttrs);	}	/**	 * 修改用户信息	 */	@Override	@RequestMapping(value = "update", method = RequestMethod.POST)	public String update(HttpServletRequest request,			@ModelAttribute("e") MemberEntity e, RedirectAttributes flushAttrs)			throws Exception {		return save(e, flushAttrs);	}	private String save(MemberEntity e, RedirectAttributes flushAttrs)			throws Exception {		if (StringUtils.isBlank(e.getId())) {// 添加			if (StringUtils.isBlank(e.getStatus())) {				e.setStatus(MemberEntity.S_YES);			}			e.setPassword(MD5.md5(e.getPassword()));			casMemberService.insert(e);		} else {// 修改			casMemberService.update(e);		}		flushAttrs.addFlashAttribute("message", "操作成功!");		return "redirect:back";	}}