package com.orange.cas.service;import com.orange.cas.dao.RoleDao;import com.orange.cas.entity.PrivilegeEntity;import com.orange.cas.entity.RoleEntity;import com.orange.core.base.service.Services;import com.orange.core.base.service.ServicesManager;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.annotation.Resource;@Service("casRoleService")public class RoleService extends ServicesManager<RoleEntity, RoleDao> implements		Services<RoleEntity> {    @Resource(name="casRoleDao")    @Override    public void setDao(RoleDao mDao) {        this.dao = mDao;    }        @Autowired	private PrivilegeService privilegeService;	        /**	 * 删除指定角色以及该角色下的所有权限	 * 	 * @param role	 */	public int delete(RoleEntity role) {				// 删除角色		dao.delete(role);		// 删除角色对应的权限		privilegeService.deleteByRole(role);		return 0;	}		/**	 * 编辑角色	 * 	 * @param role	 * @throws Exception	 */	public void editRole(RoleEntity role, String insertOrUpdate) throws Exception {		int insertRole = 0;		PrivilegeEntity privilege = new PrivilegeEntity();		if (insertOrUpdate.equals("1")) {			// 新增角色			insertRole = insert(role);		} else {			// 修改角色			insertRole = update(role);			// 删除角色的所有权限			privilege.setRid(String.valueOf(insertRole));			privilegeService.delete(privilege);		}		// 赋予权限		if (role.getPrivileges() == null				|| role.getPrivileges().trim().equals(""))			return;		String[] pArr = role.getPrivileges().split(",");		for (int i = 0; i < pArr.length; i++) {			privilege.clear();			privilege.setMid(pArr[i]);			privilege.setRid(String.valueOf(insertRole));			privilegeService.insert(privilege);		}	}		/**	 * 批量删除角色	 * 	 * @param ids	 */	public int deletes(String[] ids) {		RoleEntity role = new RoleEntity();		for (int i = 0; i < ids.length; i++) {			role.setId(ids[i]);			delete(role);			privilegeService.deleteByRole(role);			role.clear();		}		return 0;	}    }