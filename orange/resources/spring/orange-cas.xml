<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<context:component-scan base-package="com.orange.*.action" />
	<!-- <context:component-scan base-package="com.orange.*.api.*" /> -->
	<!-- 配置自定义转换服务器 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	</bean>
	<!-- 启用注解驱动 -->
	<mvc:annotation-driven conversion-service="conversionService">
		<!-- 字符串转换器 -->
		<mvc:message-converters register-defaults="true">
			<bean id="messageConverter"
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean id="jsonHttpMesaageConverter"
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
		</mvc:message-converters>
		<!-- 集合参数解析器 -->
		<!--<mvc:argument-resolvers> -->
		<!--</mvc:argument-resolvers> -->
	</mvc:annotation-driven>
	<!-- 配置静态文件路径 -->
	<!-- max caching age: 24 h -->
	<mvc:resources mapping="/resources/**" location="/resources/"
		cache-period="86400" />
	<mvc:resources mapping="/attached/**" location="/attached/"
		cache-period="86400" />
	<mvc:default-servlet-handler />

	<!-- 配置国际化资源文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n/orange_cas" />
	</bean>
	<!-- 设置freeMarker配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>

	<!-- 配置freeMarker模板路径 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath" value="/" />
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 全局变量部分 -->
		<property name="freemarkerVariables">
			<map>
				<entry key="currentUser">
					<bean class="com.orange.common.fn.CurrentUserGetter" />
				</entry>
				<entry key="checkPrivilege">
					<bean class="com.orange.common.fn.PrivilegeChecker" />
				</entry>
				<entry key="i18nParser">
					<bean class="com.orange.common.fn.I18N" />
				</entry>
				<entry key="keyValueParser">
					<bean class="com.orange.common.fn.KeyValueGetter" />
				</entry>
				<entry key="currentSetting">
					<bean class="com.orange.common.fn.CurrentSettingGetter" />
				</entry>
				<entry key="currentLinks">
					<bean class="com.orange.common.fn.CurrentLinksGetter" />
				</entry>
				<entry key="currentBanners">
					<bean class="com.orange.common.fn.CurrentBannersGetter" />
				</entry>
				<entry key="currentCatelogs">
					<bean class="com.orange.common.fn.CurrentCatelogsGetter" />
				</entry>
				<entry key="currentNavs">
					<bean class="com.orange.common.fn.CurrentNavsGetter" />
				</entry>
				<entry key="currentMember">
					<bean class="com.orange.common.fn.CurrentMemberGetter" />
				</entry>
			</map>
		</property>
	</bean>
	<!--配置jsp视图解析器 -->
	<bean id="viewResolverCommon"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="order" value="1" />
	</bean>
	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="com.orange.core.freemarker.view.FreemarkerView" />
		<property name="prefix" value="/" />
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="requestContextAttribute" value="request" />
		<property name="suffix" value=".ftl" />
		<property name="order" value="0" />
	</bean>
	<!-- 配置解析JSON所需的解析器 -->
	<!--<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" 
		/> -->
	<!-- 配置上传文件所需的解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!--<mvc:interceptors>-->
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求  -->
			<!-- <bean class="com.orange.core.interceptor.OrangeInterceptor"/> -->
		<!--<mvc:interceptor>
			<mvc:mapping path="*.do" />
			<bean class="com.orange.core.interceptor.CreditInterceptor">
				<property name="excludedUrls"> <list> <value>/login</value> </list> 
					</property> 
			</bean>
		</mvc:interceptor>-->
	<!--</mvc:interceptors>-->
</beans>